-if statements
-loops
-functions

var test = prompt("Please enter your password:");
//initialized a variable that is the defined by the function prompt.
console.log(test);

var password = "hello";
var test = prompt ("please enter your password");

if(test == password) {
  alert("welcome");

}
else {
  alert("wrong password");

}

console.log(test);

if statement is can be used for things like passwords.
loop can be used until test condition is meet also good when asking people for password.

var count = 0;
while(count<10){
  console.log("hello world");
  count++;
}

this will print hello world to the console 10 times

var count = 1; // (1) counter initialization
while(count<=10){ // (2) test condition
  console.log(count);
  count++; // (3) increment

  this will make print numbers 1-10
  var count = 10;
  while(count>=0){
    console.log(count);
    count--;
  }
this counts down from 10 to 1.

this is how to add up all the numbers in a range this is from our code practice.

var sum = 0;
var count = 1;
while(count<=10){
sum=sum+count;
count++;
console.log(sum);
}

all loops are doing the same thing. just different ways of writing them.
DO WHILE LOOPS aka as long as
do {

}while();

var count = 0; // initialize the loop counter
do {
console.log(count);
count++; // increment

}while(count<10); // test condition

example of a password code.

var userPassword;
var correctPassword = "duck";

do{
userPassword=prompt("Enter Password:");

}while(userPassword != correctPassword); // could put "duck" instead of correctPassword.

var count = 0; // step 1
while(count <= 10) { //step 2
console.log(count);
count=count+2; // step 3 same as count+=2
}

DO WHILE LOOP

var count = 0;
do{
console.log(count);
count= count+2;
}while(count<=10);

WHILE LOOP

var count = 10;
while(count >= 0){
console.log(count);
count-=5;
}

3 main steps for any loops
  *loop counter initialization
  *test condition
  *increment, decrement, or a step

var name = prompt("enter your name:");
var count = 0;
while(count <= 100){
if(name == "danielle"){
console.log("unicorns are great!");
}
else{
console.log("horses are great!");
}
count++;
}

// brackets are optional and not nessessary when there is only one line of code; however, it is good practice to include them

(count + ": unicorns are great!")// you could do something like this to see the count in as well

THE FOR LOOPS
for (var count; count<10; count++){
console.log(count);
}
// it is the same code basically
var count=0;
while(count<10){
console.log(count);
count++;
}

//added a if statement into the for loop
var count;

for (var count =0; count<10; count++){
if(count%2==0){
console.log(count);
}
}
//
var count;

for (var count =0; count<10; count++){
if(count%2==0){
console.log("your number is even! " + count);
}
  else{
    console.log("your number is odd! " + count);
  }
}

for(statement#1; statement#2; increment)

can have more test conditions in a for loop if you use logical operators.

//add up all the values from 1 to 10
var i;
var sum=0;
for(i=1; i<= 10; i++) {
sum= sum+i;
console.log(sum);
}

var i;
var factorial =1;
for(i=1; i<=4; i++){
  factorial= factorial*i;
  console.log(factorial);
}

fUNCTIONS
function waffles() {
console.log("chicken & waffles")
}

you keep () by to identify as waffles as a function and not just a string or something.

in the previous function nothing is executed because nothing is called.

function waffles(){
console.log("chicken and waffles");
}
waffles();


function waffles(){
console.log("chicken and waffles");
}
waffles();
can also be added into a loop.
                   parameter
function waffles(myString){
console.log("chicken & waffles");
}

waffles("syrup")

function waffles(myString){

console.log(myString + "and waffles");
}
waffles("syrup");
waffles("chicken");
waffles("butter");


multiple parameters
function waffles(myString1, myString2){

console.log(myString1 + " and " + myString2);
}
waffles("syrup", "chicken");
waffles("chicken", "icecream");
waffles("butter");


SCOPE
var breakfast= "eggs" //global

function waffles(myString1, myString2){
}
waffles("bacon","eggs");
console.log(breakfast);

function waffles(myString1,myString2) {
var count;
var i;
var unicorns;
console.log(myString1+myString2);
}

waffles(1,2);

function sum(num1, num2){
  return num1 + num2;

}

console.log(sum(1,2));


MORE FUNCTIONS
function printUnicorns(){
  return "Hello Unicorns!";
}

var myResult = printUnicorns();
console.log(myResult);
